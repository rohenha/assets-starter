//
//  D E B G R I D
//
//  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

@function debgrid($key) {
  @return map-get($debgrid, $key);
}

;

//  Debug grid default
//  ───────────────────────────────────
$debgrid: map-merge(( // horizontal: false,
    // maxwidth: 120rem,
    // width: 100%,
    // columns: 12,
    // gutter: 3rem,
    // colorColumn: rgba(#f2777a, 0.5),
    // colorGutter: rgba(#f2777a, 0.25),
    // vertical: true,
    // vertical-size: 2rem,
    // colorVOdd: rgba(#6699cc, 0.5),
    // colorVEven: transparent
  ),
  $debgrid);

body {
  @if debgrid(horizontal)==true or debgrid(vertical)==true {
    position: relative;
  }
}

//  Horizontal Debug Grid
//  ───────────────────────────────────
body::before {
  @if debgrid(horizontal)==true {
    // $debgridGutterPercent: (debgrid(gutter) * 100 / debgrid(maxwidth)  * 1%) / 2;
    $debgridGutterPercent: 0;
    $debgridColumnPercent: ((debgrid(maxwidth) - (debgrid(gutter) * debgrid(columns))) / debgrid(columns)) * 100 / debgrid(maxwidth) * 1%;

    position: fixed;
    top: 0;
    bottom: 0;
    left: 50%;

    display: block;
    width: debgrid(width);
    max-width: debgrid(maxwidth);
    // z-index: 999999;

    content: '';
    // $debgridColumnPercent: 3.125 * 1%;

    background: repeating-linear-gradient(to right,
        debgrid(colorColumnOdd),
        debgrid(colorColumnOdd) $debgridColumnPercent,
        debgrid(colorColumnEven) $debgridColumnPercent,
        debgrid(colorColumnEven) $debgridColumnPercent * 2);
    transform: translateX(-50%);

    pointer-events: none;
    // background: repeating-linear-gradient(
    //   to right,
    //   debgrid(colorGutter),
    //   debgrid(colorGutter) $debgridGutterPercent,
    //   debgrid(colorColumn) $debgridGutterPercent,
    //   debgrid(colorColumn) $debgridColumnPercent + $debgridGutterPercent,
    //   debgrid(colorGutter) $debgridColumnPercent + $debgridGutterPercent,
    //   debgrid(colorGutter) $debgridColumnPercent + ($debgridGutterPercent * 2)
    // );
  }
}

//  Vertical Debug Grid
//  ───────────────────────────────────
body::after {
  @if debgrid(vertical)==true {
    position: absolute;
    top: 0;
    right: 0;
    left: 0;

    height: 100%;

    content: '';

    background: repeating-linear-gradient(to bottom,
        debgrid(colorVOdd),
        debgrid(colorVOdd) debgrid(vertical-size),
        debgrid(colorVEven) debgrid(vertical-size),
        debgrid(colorVEven) debgrid(vertical-size) * 2);

    pointer-events: none;
  }
}
